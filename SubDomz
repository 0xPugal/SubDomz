#!/bin/bash

#Colours
bold="\e[1m"
Underlined="\e[4m"
red="\e[31m"
green="\e[32m"
blue="\e[34m"
end="\e[0m"
VERSION="SubDomz_v1.0"

echo -e "$blue${bold}    _____         __     ____                         $end"
echo -e "$blue${bold}   / ___/ __  __ / /_   / __ \ ____   ________  ____  $end"
echo -e "$blue${bold}   \__ \ / / / // __ \ / / / // __ \ / __  __ \/_  /  $end"
echo -e "$blue${bold}  ___/ // /_/ // /_/ // /_/ // /_/ // / / / / / / /_  $end"
echo -e "$blue${bold} /____/ \__,_//_.___//_____/ \____//_/ /_/ /_/ /___/  $end"
echo -e "$end"
echo -e "$blue${bold}        All in One Subdomain Enumeration Tool         $end"
echo -e "$blue${bold}             Made with${end} ${red}${bold}<3${end} ${blue}${bold}by 0xPugazh              $end"
echo -e "$end"

PRG=${0##*/}

#Tools
Usage(){
    while read -r line; do
        printf "%b\n" "$line"
    done <<-EOF
    \r
    \r ${bold}Options${end}:
    \r    -d ==> Domain to enumerate
    \r    -o ==> Output file to save the final results
    \r    -h ==> Display this help message and exit
    \r    -v ==> Display the version and exit

EOF
    exit 1
}

mkdir -p ~/SubDomz/output/$domain/

# Variables
# Add your api keys, tokens here
subfinder=~/.config/subfinder/provider-config.yaml
amass=~/.config/amass/config.ini
wordlist=Wordlist/dns.txt
GITHUB_TOKEN="TOKEN_HERE"
GITLAB_TOKEN="TOKEN_HERE"
SHODAN_APIKEY="API_KEY_HERE"
CENSYS_ID="ID_HERE"
CENSYS_SECRET="SECRET_HERE"
CHAOS_APIKEY="API_KEY_HERE"


RunEnumeration() {
    local func_name="$1"
    echo -e "\n${bold}Running $func_name...${end}\n"
}

# Tools
Subfinder() {
	RunEnumeration "Subfinder"
    subfinder -all -silent -d $domain -pc $subfinder -silent | tee ~/SubDomz/output/$domain/tmp-subfinder.txt
}

Assetfinder() {
	RunEnumeration "Assetfinder"
    assetfinder --subs-only $domain | tee ~/SubDomz/output/$domain/tmp-assetfinder.txt
}

Chaos() {
	RunEnumeration "Chaos"
    chaos -silent -d $domain -key $CHAOS_APIKEY -silent | tee ~/SubDomz/output/$domain/tmp-chaos.txt
}

Shuffledns() {
	RunEnumeration "Shuffledns"
    shuffledns -silent -d $domain -w $wordlist -r $resolvers -silent | tee ~/SubDomz/output/$domain/tmp-shuffledns.txt
}

Findomain() {
RunEnumeration "Findomain"
	findomain --target $domain --quiet | tee ~/SubDomz/output/$domain/tmp-findomain.txt
}

Amass_Passive() {
	RunEnumeration "Amass Passive"
	amass enum -d $domain -config $amass | tee ~/SubDomz/output/$domain/tmp-amass.txt
}

Gau() {
	RunEnumeration "Gau"
	gau --subs $domain | unfurl -u domains | tee ~/SubDomz/output/$domain/tmp-gau.txt
}

Waybackurls() {
	RunEnumeration "Waybackurls"
	waybackurls $domain |  unfurl -u domains | tee ~/SubDomz/output/$domain/tmp-waybackurls.txt
}

Github-Subdomains() {
	RunEnumeration "Github-Subdomains"
	github-subdomains -d $domain -t $GITHUB_TOKEN | unfurl domains | tee ~/SubDomz/output/$domain/tmp-github.txt
}

Gitlab-Subdomains() {
	RunEnumeration "Gitlab-Subdomains"
	gitlab-subdomains -d $domain -t $GITLAB_TOKEN | unfurl domains | tee ~/SubDomz/output/$domain/tmp-gitlab.txt

Crobat() {
	RunEnumeration "Crobat"
	crobat -s $domain | tee ~/SubDomz/output/$domain/tmp-crobat.txt
}

Cero() {
	RunEnumeration "Cero"
	cero $domain | tee ~/SubDomz/output/$domain/tmp-cero.txt
}

#Online_Services
Archive() {
	RunEnumeration "Archive"
	curl -sk "http://web.archive.org/cdx/search/cdx?url=*.$domain&output=txt&fl=original&collapse=urlkey&page=" | awk -F/ '{gsub(/:.*/, "", $3); print $3}' | sort -u | tee ~/SubDomz/output/$domain/tmp-archive.txt
}

BufferOver() {
	RunEnumeration "BufferOver"
	curl -s "https://dns.bufferover.run/dns?q=.$domain" | grep $domain | awk -F, '{gsub("\"", "", $2); print $2}' | tee ~/SubDomz/output/$domain/tmp-bufferover.txt
}

Crt() {
	RunEnumeration "Crt"
	curl -sk "https://crt.sh/?q=%.$domain&output=json" | tr ',' '\n' | awk -F'"' '/name_value/ {gsub(/\*\./, "", $4); gsub(/\\n/,"\n",$4);print $4}' | tee ~/SubDomz/output/$domain/tmp-crtsh.txt
}

Riddler() {
	RunEnumeration "Riddler"
	curl -sk "https://riddler.io/search/exportcsv?q=pld:$domain" | grep -Po "(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | tee ~/SubDomz/output/$domain/tmp-riddler.txt
}

CertSpotter() {
	RunEnumeration "CertSpotter"
	curl -sk "https://api.certspotter.com/v1/issuances?domain=$domain&include_subdomains=true&expand=dns_names" | jq .[].dns_names | grep -Po "(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | tee ~/SubDomz/output/$domain/tmp-certspotter.txt
}

JLDC() {
	RunEnumeration "JLDC"
	curl -sk "https://jldc.me/anubis/subdomains/$domain" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | tee ~/SubDomz/output/$domain/tmp-jldc.txt
}

HackerTarget() {
	RunEnumeration "HackerTarget"
	curl -sk "https://api.hackertarget.com/hostsearch/?q=$domain" | unfurl domains | tee ~/SubDomz/output/$domain/tmp-hackertarget.txt
}

ThreatCrowd() {
	RunEnumeration "ThreatCrowd"
	curl -sk "https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$domain" | jq -r '.subdomains' | grep -o "\w.*$domain" | tee ~/SubDomz/output/$domain/tmp-threatcrowd.txt
}

Anubis() {
	RunEnumeration "Anubis"
	curl -sk "https://jldc.me/anubis/subdomains/$domain" | jq -r '.' | grep -o "\w.*$domain" | tee ~/SubDomz/output/$domain/tmp-anubis.txt
}

ThreatMiner() {
	RunEnumeration "ThreatMiner"
	curl -sk "https://api.threatminer.org/v2/domain.php?q=$domain&rt=5" | jq -r '.results[]' |grep -o "\w.*$domain" | sort -u   | tee ~/SubDomz/output/$domain/tmp-threatminer.txt
}

Omnisint() {
	RunEnumeration "Omnisint"
	curl -sk "https://sonar.omnisint.io/subdomains/$domain" | cut -d "[" -f1 | cut -d "]" -f1 | cut -d "\"" -f 2 | sort -u | tee ~/SubDomz/output/$domain/tmp-ominsint.txt
}


Output() {
    local custom_output="$1"
    local output_dir="~/SubDomz/output/$domain/"
    local consolidated_file="$output_dir/$custom_output"

    cat ~/SubDomz/$domain/tmp-*.txt | anew | "$consolidated_file"

    echo "Subdomains are saved to: $consolidated_file"
}


# Main
Main() {
    if [ -z "$domain" ]; then
        echo -e "${red}[-] Argument -d and -o are required!$end"
        Usage
    fi

    Subfinder
    Assetfinder
    Chaos
    Shuffledns
	Findomain
	Amass_Passive
	Gau
	Waybackurls
	Github-Subdomains
	Gitlab-Subdomains
	Crobat
	Cero
	Archive
	BufferOver
	Crt
	Riddler
	CertSpotter
	JLDC
	HackerTarget
	ThreatCrowd
	Anubis
	ThreatMiner
	Omnisint

    Output
}

# Parse command-line arguments
while [ -n "$1" ]; do
    case $1 in
        -d)
            domain="$2"
            shift ;;
        -o)
            out="$2"
            shift ;;
        -h | --help)
            Usage ;;
        -v)
            echo "Version: $VERSION"
            exit 0 ;;
        *)
            echo "[-] Unknown Option: $1"
            Usage ;;
    esac
    shift
done

Main
